<?xml version="1.0" encoding="UTF-8"?>
<fps version="1.2" url="">
	<generator name="wzw" url=""/>
	<item>
<title>C语言4.12</title>
<time_limit unit="s">1</time_limit>
<memory_limit unit="mb">32</memory_limit>

<description>&lt;p&gt;
	给出圆柱的底面半径r以及圆柱高h，求底面的圆周长、底面圆面积、圆柱体积。另外有一个半径同样为r的圆球体，求圆球表面积和圆球体积。
&lt;/p&gt;</description>
<input>&lt;p&gt;
	两个用空格隔开的浮点数r和h。
&lt;/p&gt;</input> 
<output>&lt;p&gt;
	依次输出圆柱底面圆周长、底面圆面积、圆柱体积、圆球表面积、圆球体积。所有的实数输出请使用C语言的默认舍入方式保留2位小数，注意行尾输出换行。
&lt;/p&gt;</output>
<sample_input>1.5 3</sample_input>
<sample_output>9.42 7.07 21.21 28.27 14.14
</sample_output>
  <test_input>13.3 2.6
</test_input>
<test_output>83.57 555.72 1444.86 2222.87 9854.70
</test_output>
<hint></hint>
<source>教学题-C语言</source>
		<solution language="C">#include&lt;stdio.h&gt;
#define PI 3.1415926
int main()
{
	double r,h,l,s1,v1,s2,v2;
	scanf("%lf%lf",&amp;r,&amp;h);
	l=2*PI*r;
	s1=PI*r*r;
	v1=s1*h;
	s2=4*PI*r*r;
	v2=(4.0/3)*PI*r*r*r;
	printf("%.2lf %.2lf %.2lf %.2lf %.2lf\n",l,s1,v1,s2,v2);
	return 0;
}</solution>
			<solution language="C++">#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
#define PI 3.14159265358
int main() {
	float r, h;
	scanf("%f %f", &amp;r, &amp;h);
	printf("%.2lf %.2lf %.2lf %.2lf %.2lf\n", PI * 2.0 * r, PI * r * r, PI * r * r * h, PI * 4.0 * r * r, PI * 4.0 / 3.0 * r * r * r);
	return 0;
}
</solution>
			<solution language="Pascal">var 
  r,h:double;

begin
  readln(r,h);
  writeln( 2*r*pi:0:2,' ',pi*r*r:0:2,' ',
    pi*r*r*h:0:2,' ',pi*4*r*r:0:2,' ',4/3*pi*r*r*r:0:2);
end.



</solution>
			<solution language="Java">import java.util.*;
public class Main {
	public static void main(String args[]) {
		Scanner cin=new Scanner(System.in);
		double r,h;
		double a,b,c,d,e;
		r=cin.nextDouble();
		h=cin.nextDouble();
		a=2*r*Math.PI;
		b=Math.PI*r*r;
		c=b*h;
		d=2*a*r;
		e=(4.0/3.0)*b*r;
		System.out.printf("%.2f %.2f %.2f %.2f %.2f\n",a,b,c,d,e);
	}
}</solution>
			<solution language="Python">import math
r,h = [float(x) for x in raw_input().split()]
print "%.2f %.2f %.2f %.2f %.2f" %(2*math.pi*r,math.pi*r*r, math.pi*r*r*h, 4*math.pi*r*r,4./3*math.pi*r*r*r)</solution>
	</item>
</fps>
